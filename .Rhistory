geom_col(fill = "#FFFF99", colour = "black") +
geom_text(aes(label = paste0(round(Freq,1),"%")),
stat = "identity", size = 4,
fontface = "bold", position = position_stack(vjust = 0.5)) +
theme(axis.title.x = element_blank(),
axis.text.x = element_text(colour = "black", size = 10),
plot.title = element_text(hjust = 0.5, size = 12)) +
labs(title = "Self Employed",
y = "%")
tab <- as.data.frame(100*prop.table(table(dane$Credit_History)))
ggplot(tab, aes(x = Var1, y = Freq)) +
geom_col(fill = "#FFFF99", colour = "black") +
geom_text(aes(label = paste0(round(Freq,1),"%")),
stat = "identity", size = 4,
fontface = "bold", position = position_stack(vjust = 0.5)) +
theme(axis.title.x = element_blank(),
axis.text.x = element_text(colour = "black", size = 10),
plot.title = element_text(hjust = 0.5, size = 12)) +
labs(title = "Credit History",
y = "%")
tab <- as.data.frame(100*prop.table(table(dane$Property_Area)))
ggplot(tab, aes(x = Var1, y = Freq)) +
geom_col(fill = "#FFFF99", colour = "black") +
geom_text(aes(label = paste0(round(Freq,1),"%")),
stat = "identity", size = 4,
fontface = "bold", position = position_stack(vjust = 0.5)) +
theme(axis.title.x = element_blank(),
axis.text.x = element_text(colour = "black", size = 10),
plot.title = element_text(hjust = 0.5, size = 12)) +
labs(title = "Property Area",
y = "%")
# wykres słupkowy dla zmiennej Loan_Status
tab <- as.data.frame(100*prop.table(table(dane$Loan_Status)))
ggplot(tab, aes(x = Var1, y = Freq)) +
geom_col(fill = "#FFFF99", colour = "black") +
geom_text(aes(label = paste0(round(Freq,1),"%")),
stat = "identity", size = 5,
fontface = "bold", position = position_stack(vjust = 0.5)) +
theme(axis.title.x = element_blank(),
axis.text.x = element_text(colour = "black", size = 10),
plot.title = element_text(hjust = 0.5, size = 12)) +
labs(title = "Decyzja pożyczkowa",
y = "%")
tab <- as.data.frame(100*prop.table(table(dane$Gender)))
ggplot(tab, aes(x = Var1, y = Freq)) +
geom_col(fill = "#FFFF99", colour = "black") +
geom_text(aes(label = paste0(round(Freq,1),"%")),
stat = "identity", size = 4,
fontface = "bold", position = position_stack(vjust = 0.5)) +
theme(axis.title.x = element_blank(),
axis.text.x = element_text(colour = "black", size = 10),
plot.title = element_text(hjust = 0.5, size = 12)) +
labs(title = "Płeć",
y = "%")
tab <- as.data.frame(100*prop.table(table(dane$Married)))
ggplot(tab, aes(x = Var1, y = Freq)) +
geom_col(fill = "#FFFF99", colour = "black") +
geom_text(aes(label = paste0(round(Freq,1),"%")),
stat = "identity", size = 4,
fontface = "bold", position = position_stack(vjust = 0.5)) +
theme(axis.title.x = element_blank(),
axis.text.x = element_text(colour = "black", size = 10),
plot.title = element_text(hjust = 0.5, size = 12)) +
labs(title = "Małżeństwo",
y = "%")
# wykres słupkowy dla zmiennej Loan_Status
tab <- as.data.frame(100*prop.table(table(dane$Dependents)))
ggplot(tab, aes(x = Var1, y = Freq)) +
geom_col(fill = "#FFFF99", colour = "black") +
geom_text(aes(label = paste0(round(Freq,1),"%")),
stat = "identity", size = 3,
fontface = "bold", position = position_stack(vjust = 0.5)) +
theme(axis.title.x = element_blank(),
axis.text.x = element_text(colour = "black", size = 10),
plot.title = element_text(hjust = 0.5, size = 12)) +
labs(title = "Oosby na utrzymaniu",
y = "%")
tab <- as.data.frame(100*prop.table(table(dane$Credit_History)))
ggplot(tab, aes(x = Var1, y = Freq)) +
geom_col(fill = "#FFFF99", colour = "black") +
geom_text(aes(label = paste0(round(Freq,1),"%")),
stat = "identity", size = 4,
fontface = "bold", position = position_stack(vjust = 0.5)) +
theme(axis.title.x = element_blank(),
axis.text.x = element_text(colour = "black", size = 10),
plot.title = element_text(hjust = 0.5, size = 12)) +
labs(title = "Historia kredytowa",
y = "%")
tab <- as.data.frame(100*prop.table(table(dane$Property_Area)))
ggplot(tab, aes(x = Var1, y = Freq)) +
geom_col(fill = "#FFFF99", colour = "black") +
geom_text(aes(label = paste0(round(Freq,1),"%")),
stat = "identity", size = 4,
fontface = "bold", position = position_stack(vjust = 0.5)) +
theme(axis.title.x = element_blank(),
axis.text.x = element_text(colour = "black", size = 10),
plot.title = element_text(hjust = 0.5, size = 12)) +
labs(title = "Lokalizacja",
y = "%")
# histogramy
plot1 <- ggplot(dane, aes(x = ApplicantIncome)) +
geom_histogram(colour = "black", fill = "#FFFF99", bins = 10) +
labs(title = "Applicant Income",
x = "dollars", y = "n") +
theme(plot.title = element_text(hjust = 0.5, size = 12))
plot2 <- ggplot(dane, aes(x = CoapplicantIncome)) +
geom_histogram(colour = "black", fill = "#FFFF99", bins = 10) +
labs(title = "Coapplicant Income",
x = "dollars", y = "n") +
theme(plot.title = element_text(hjust = 0.5, size = 12))
plot3 <- ggplot(dane, aes(x = LoanAmount)) +
geom_histogram(colour = "black", fill = "#FFFF99", bins = 10) +
labs(title = "Loan Amount",
x = "dollars", y = "n") +
theme(plot.title = element_text(hjust = 0.5, size = 12))
plot4 <- ggplot(dane, aes(x = Loan_Amount_Term)) +
geom_histogram(colour = "black", fill = "#FFFF99", bins = 10) +
labs(title = "Loan Amount Term",
x = "months", y = "n") +
theme(plot.title = element_text(hjust = 0.5, size = 12))
grid.arrange(plot1, plot2, plot3, plot4, nrow = 2)
filtered_data <- dane[dane$Loan_Status == "Y", ]
tab <- as.data.frame(100*prop.table(table(filtered_data$Self_Employed)))
ggplot(tab, aes(x = Var1, y = Freq)) +
geom_col(fill = "#FFFF99", colour = "black") +
geom_text(aes(label = paste0(round(Freq, 1), "%")),
stat = "identity", size = 4,
fontface = "bold", position = position_stack(vjust = 0.5)) +
theme(axis.title.x = element_blank(),
axis.text.x = element_text(colour = "black", size = 10),
plot.title = element_text(hjust = 0.5, size = 12)) +
labs(title = "Samozatrudnienie (Loan Status: Y)",
y = "%")
filtered_data <- dane[dane$Loan_Status == "Y", ]
tab <- as.data.frame(100*prop.table(table(filtered_data$Gender)))
ggplot(tab, aes(x = Var1, y = Freq)) +
geom_col(fill = "#FFFF99", colour = "black") +
geom_text(aes(label = paste0(round(Freq,1),"%")),
stat = "identity", size = 4,
fontface = "bold", position = position_stack(vjust = 0.5)) +
theme(axis.title.x = element_blank(),
axis.text.x = element_text(colour = "black", size = 10),
plot.title = element_text(hjust = 0.5, size = 12)) +
labs(title = "Płeć",
y = "%")
filtered_data <- dane[dane$Loan_Status == "Y", ]
tab <- as.data.frame(100*prop.table(table(filtered_data$Married)))
ggplot(tab, aes(x = Var1, y = Freq)) +
geom_col(fill = "#FFFF99", colour = "black") +
geom_text(aes(label = paste0(round(Freq,1),"%")),
stat = "identity", size = 4,
fontface = "bold", position = position_stack(vjust = 0.5)) +
theme(axis.title.x = element_blank(),
axis.text.x = element_text(colour = "black", size = 10),
plot.title = element_text(hjust = 0.5, size = 12)) +
labs(title = "Małżeństwo",
y = "%")
View(dane)
filtered_data <- dane[dane$Loan_Status == "Y", ]
tab <- as.data.frame(100*prop.table(table(filtered_data$Dependents)))
ggplot(tab, aes(x = Var1, y = Freq)) +
geom_col(fill = "#FFFF99", colour = "black") +
geom_text(aes(label = paste0(round(Freq,1),"%")),
stat = "identity", size = 3,
fontface = "bold", position = position_stack(vjust = 0.5)) +
theme(axis.title.x = element_blank(),
axis.text.x = element_text(colour = "black", size = 10),
plot.title = element_text(hjust = 0.5, size = 12)) +
labs(title = "Oosby na utrzymaniu",
y = "%")
filtered_data <- dane[dane$Loan_Status == "Y", ]
tab <- as.data.frame(100*prop.table(table(filtered_data$Education)))
ggplot(tab, aes(x = Var1, y = Freq)) +
geom_col(fill = "#FFFF99", colour = "black") +
geom_text(aes(label = paste0(round(Freq,1),"%")),
stat = "identity", size = 4,
fontface = "bold", position = position_stack(vjust = 0.5)) +
theme(axis.title.x = element_blank(),
axis.text.x = element_text(colour = "black", size = 10),
plot.title = element_text(hjust = 0.5, size = 12)) +
labs(title = "Edukacja",
y = "%")
tab <- as.data.frame(100*prop.table(table(dane$Self_Employed)))
ggplot(tab, aes(x = Var1, y = Freq)) +
geom_col(fill = "#FFFF99", colour = "black") +
geom_text(aes(label = paste0(round(Freq,1),"%")),
stat = "identity", size = 4,
fontface = "bold", position = position_stack(vjust = 0.5)) +
theme(axis.title.x = element_blank(),
axis.text.x = element_text(colour = "black", size = 10),
plot.title = element_text(hjust = 0.5, size = 12)) +
labs(title = "Samozatrudnienie",
y = "%")
filtered_data <- dane[dane$Loan_Status == "Y", ]
tab <- as.data.frame(100*prop.table(table(filtered_data$Self_Employed)))
ggplot(tab, aes(x = Var1, y = Freq)) +
geom_col(fill = "#FFFF99", colour = "black") +
geom_text(aes(label = paste0(round(Freq, 1), "%")),
stat = "identity", size = 4,
fontface = "bold", position = position_stack(vjust = 0.5)) +
theme(axis.title.x = element_blank(),
axis.text.x = element_text(colour = "black", size = 10),
plot.title = element_text(hjust = 0.5, size = 12)) +
labs(title = "Samozatrudnienie (Loan Status: Y)",
y = "%")
filtered_data <- dane[dane$Loan_Status == "Y", ]
tab <- as.data.frame(100*prop.table(table(filtered_data$Credit_History)))
ggplot(tab, aes(x = Var1, y = Freq)) +
geom_col(fill = "#FFFF99", colour = "black") +
geom_text(aes(label = paste0(round(Freq,1),"%")),
stat = "identity", size = 4,
fontface = "bold", position = position_stack(vjust = 0.5)) +
theme(axis.title.x = element_blank(),
axis.text.x = element_text(colour = "black", size = 10),
plot.title = element_text(hjust = 0.5, size = 12)) +
labs(title = "Historia kredytowa",
y = "%")
tab <- as.data.frame(100*prop.table(table(dane$Credit_History)))
ggplot(tab, aes(x = Var1, y = Freq)) +
geom_col(fill = "#FFFF99", colour = "black") +
geom_text(aes(label = paste0(round(Freq,1),"%")),
stat = "identity", size = 4,
fontface = "bold", position = position_stack(vjust = 0.5)) +
theme(axis.title.x = element_blank(),
axis.text.x = element_text(colour = "black", size = 10),
plot.title = element_text(hjust = 0.5, size = 12)) +
labs(title = "Historia kredytowa",
y = "%")
tab <- as.data.frame(100*prop.table(table(dane$Property_Area)))
ggplot(tab, aes(x = Var1, y = Freq)) +
geom_col(fill = "#FFFF99", colour = "black") +
geom_text(aes(label = paste0(round(Freq,1),"%")),
stat = "identity", size = 4,
fontface = "bold", position = position_stack(vjust = 0.5)) +
theme(axis.title.x = element_blank(),
axis.text.x = element_text(colour = "black", size = 10),
plot.title = element_text(hjust = 0.5, size = 12)) +
labs(title = "Lokalizacja",
y = "%")
filtered_data <- dane[dane$Loan_Status == "Y", ]
tab <- as.data.frame(100*prop.table(table(dane$Property_Area)))
ggplot(tab, aes(x = Var1, y = Freq)) +
geom_col(fill = "#FFFF99", colour = "black") +
geom_text(aes(label = paste0(round(Freq,1),"%")),
stat = "identity", size = 4,
fontface = "bold", position = position_stack(vjust = 0.5)) +
theme(axis.title.x = element_blank(),
axis.text.x = element_text(colour = "black", size = 10),
plot.title = element_text(hjust = 0.5, size = 12)) +
labs(title = "Lokalizacja",
y = "%")
filtered_data <- dane[dane$Loan_Status == "Y", ]
tab <- as.data.frame(100*prop.table(table(filtered_data$Property_Area)))
ggplot(tab, aes(x = Var1, y = Freq)) +
geom_col(fill = "#FFFF99", colour = "black") +
geom_text(aes(label = paste0(round(Freq,1),"%")),
stat = "identity", size = 4,
fontface = "bold", position = position_stack(vjust = 0.5)) +
theme(axis.title.x = element_blank(),
axis.text.x = element_text(colour = "black", size = 10),
plot.title = element_text(hjust = 0.5, size = 12)) +
labs(title = "Lokalizacja",
y = "%")
# statystyki opisowe
kable(describe(dane[,6:9])[c(2:5,8,9,11,12)])
# statystyki opisowe
kable(describe(dane[,6:9])[c(2:5,8,9,11,12)])
# statystyki opisowe
kable(describe(dane[,6:9,13:14])[c(2:5,8,9,11,12,13,14)])
# statystyki opisowe
kable(describe(dane[,6:9])[c(2:5,8,9,11,12,13,14)])
# statystyki opisowe
kable(describe(dane[,6:9])[c(2:5,8,9,11,12)])
dane <- dane %>%
mutate(Total_income = (ApplicantIncome + CoapplicantIncome))
dane <- dane %>%
mutate(Total_income_by_one = (ApplicantIncome + CoapplicantIncome)/2)
kable(describe(dane[,6:9])[c(2:5,8,9,11,12)])
kable(describe(dane$Total_income))
kable(describe(dane$Total_income_by_one)
kable(describe(dane[,6:9])[c(2:5,8,9,11,12)])
kable(describe(dane$Total_income))
kable(describe(dane$Total_income_by_one))
kable(describe(dane$Total_income))
kable(describe(dane$Total_income_by_one))
kable(describe(dane$Total_income_by_one))
kable(describe(dane[,6:9])[c(2:5,8,9,11,12)])
# histogramy
plot1 <- ggplot(dane, aes(x = ApplicantIncome)) +
geom_histogram(colour = "black", fill = "#FFFF99", bins = 10) +
labs(title = "Applicant Income",
x = "dollars", y = "n") +
theme(plot.title = element_text(hjust = 0.5, size = 12))
plot2 <- ggplot(dane, aes(x = CoapplicantIncome)) +
geom_histogram(colour = "black", fill = "#FFFF99", bins = 10) +
labs(title = "Coapplicant Income",
x = "dollars", y = "n") +
theme(plot.title = element_text(hjust = 0.5, size = 12))
plot3 <- ggplot(dane, aes(x = LoanAmount)) +
geom_histogram(colour = "black", fill = "#FFFF99", bins = 10) +
labs(title = "Loan Amount",
x = "dollars", y = "n") +
theme(plot.title = element_text(hjust = 0.5, size = 12))
plot4 <- ggplot(dane, aes(x = Loan_Amount_Term)) +
geom_histogram(colour = "black", fill = "#FFFF99", bins = 10) +
labs(title = "Loan Amount Term",
x = "months", y = "n") +
theme(plot.title = element_text(hjust = 0.5, size = 12))
grid.arrange(plot1, plot2, plot3, plot4, nrow = 2)
ggplot(dane, aes(x = ApplicantIncome)) +
geom_histogram(colour = "black", fill = "#FFFF99", bins = 10) +
labs(title = "Applicant Income",
x = "dollars", y = "n") +
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggplot(dane, aes(x = CoapplicantIncome)) +
geom_histogram(colour = "black", fill = "#FFFF99", bins = 10) +
labs(title = "Coapplicant Income",
x = "dollars", y = "n") +
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggplot(dane, aes(x = LoanAmount)) +
geom_histogram(colour = "black", fill = "#FFFF99", bins = 10) +
labs(title = "Loan Amount",
x = "dollars", y = "n") +
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggplot(dane, aes(x = Loan_Amount_Term)) +
geom_histogram(colour = "black", fill = "#FFFF99", bins = 10) +
labs(title = "Loan Amount Term",
x = "months", y = "n") +
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggplot(dane, aes(x = CoapplicantIncome)) +
geom_histogram(colour = "black", fill = "#FFFF99", bins = 10) +
labs(title = "Dochód współaplikanta",
x = "dollars", y = "n") +
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggplot(dane, aes(x = ApplicantIncome)) +
geom_histogram(colour = "black", fill = "#FFFF99", bins = 10) +
labs(title = "Dochód aplikanta",
x = "dollars", y = "n") +
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggplot(dane, aes(x = LoanAmount)) +
geom_histogram(colour = "black", fill = "#FFFF99", bins = 10) +
labs(title = "Loan Amount",
x = "dollars", y = "n") +
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggplot(dane, aes(x = LoanAmount)) +
geom_histogram(colour = "black", fill = "#FFFF99", bins = 10) +
labs(title = "Wartość pożyczki",
x = "dollars", y = "n") +
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggplot(dane, aes(x = Loan_Amount_Term)) +
geom_histogram(colour = "black", fill = "#FFFF99", bins = 10) +
labs(title = "Okres pożyczkowania",
x = "months", y = "n") +
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggplot(dane, aes(x = Loan_Amount_Term)) +
geom_histogram(colour = "black", fill = "#FFFF99", bins = 10) +
labs(title = "Okres pożyczkowania",
x = "months", y = "n") +
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggplot(dane, aes(x = Loan_Amount_Term, y = LoanAmount, fill = Property_Area)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Liczba zamówień w danym dniu tygodnia",
x = "Dzień tygodnia",
y = "Liczba zamówień",
fill = "Kategoria") +
theme_minimal()
ggplot(dane, aes(x = Loan_Amount_Term, y = LoanAmount, fill = Property_Area)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Liczba zamówień w danym dniu tygodnia",
x = "Dzień tygodnia",
y = "Liczba zamówień",
fill = "Kategoria") +
theme_minimal()
ggplot(dane, aes(x = Loan_Amount_Term, y = LoanAmount, fill = Property_Area)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Wielkość pożyczki względem lokalizacji",
x = "Dzień tygodnia",
y = "Liczba zamówień",
fill = "Kategoria") +
theme_minimal()
ggplot(dane, aes(x = Education, y = LoanAmount, fill = Property_Area)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Wielkość pożyczki względem lokalizacji",
x = "Edukacja",
y = "Wartość pożyczki",
fill = "Lokalizacja") +
theme_minimal()
ggplot(dane, aes(x = Education, y = LoanAmount, fill = Property_Area)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Wielkość pożyczki z podziałem na edukacje względem lokalizacji",
x = "Edukacja",
y = "Wartość pożyczki",
fill = "Lokalizacja") +
theme_minimal()
ggplot(dane, aes(x = Education, y = mean_LoanAmount, fill = Property_Area)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Wielkość pożyczki z podziałem na edukacje względem lokalizacji",
x = "Edukacja",
y = "Wartość pożyczki",
fill = "Lokalizacja") +
theme_minimal()
ggplot(dane, aes(x = Education, y = LoanAmount, fill = Property_Area)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Wielkość pożyczki z podziałem na edukacje względem lokalizacji",
x = "Edukacja",
y = "Wartość pożyczki",
fill = "Lokalizacja") +
theme_minimal()
ggplot(dane, aes(x = Education, y = LoanAmount, fill = Property_Area)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Wielkość pożyczki osób wykształconych ze względu na lokalizację",
x = "Edukacja",
y = "Wartość pożyczki",
fill = "Lokalizacja") +
theme_minimal()
ggplot(dane, aes(x = Education, y = LoanAmount, fill = Property_Area)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Wielkość pożyczki osób wykształconych ze względu na lokalizację",
x = "Edukacja",
y = "Wartość pożyczki",
fill = "Lokalizacja") +
theme_minimal()
ggplot(dane, aes(x = seq_along(Loan_Amount), y = Loan_Amount)) +
geom_line(color = "blue") +
labs(title = "Wykres liniowy Loan Amount", x = "Numer obserwacji", y = "Loan Amount")
ggplot(dane, aes(x = seq_along(LoanAmount), y = Loan_Amount)) +
geom_line(color = "blue") +
labs(title = "Wykres liniowy Loan Amount", x = "Numer obserwacji", y = "Loan Amount")
ggplot(dane, aes(x = seq_along(LoanAmount), y = Loan_Amount)) +
geom_line(color = "blue") +
labs(title = "Wykres liniowy Loan Amount", x = "Numer obserwacji", y = "Loan Amount")
# Narysuj wykres liniowy zmiennej LoanAmount
ggplot(dane, aes(x = seq_along(LoanAmount), y = LoanAmount)) +
geom_line(color = "blue") +
labs(title = "Wykres liniowy Loan Amount", x = "Numer obserwacji", y = "Loan Amount")
# Uporządkuj dane według kolumny LoanAmount
dane <- dane %>% arrange(LoanAmount)
# Narysuj wykres liniowy zmiennej LoanAmount
ggplot(dane, aes(x = seq_along(LoanAmount), y = LoanAmount)) +
geom_line(color = "blue") +
labs(title = "Wykres liniowy Loan Amount", x = "Numer obserwacji", y = "Loan Amount")
ggplot(dane, aes(x = LoanAmount, y = Loan_Amount_Term)) +
geom_point(color = "green") +
labs(title = "Wykres rozrzutu Loan Amount i Loan Terms", x = "Loan Amount", y = "Loan Terms")
ggplot(dane, aes(x = LoanAmount, y = Loan_Amount_Term)) +
geom_point(color = "green") +
labs(title = "Wykres rozrzutu Loan Amount i Loan Terms", x = "Loan Amount", y = "Loan Terms")
# Narysuj dwa wykresy rozrzutu, kategoryzowane przez LoanStatus
ggplot(dane, aes(x = LoanAmount, y = Loan_Terms, color = LoanStatus)) +
geom_point() +
facet_wrap(~LoanStatus, scales = "free") +
labs(title = "Wykresy rozrzutu Loan Amount i Loan Terms według Loan Status", x = "Loan Amount", y = "Loan Terms", color = "Loan Status")
tab <- as.data.frame(100*prop.table(table(dane$Credit_History)))
ggplot(tab, aes(x = Var1, y = Freq)) +
geom_col(fill = "#FFFF99", colour = "black") +
geom_text(aes(label = paste0(round(Freq,1),"%")),
stat = "identity", size = 4,
fontface = "bold", position = position_stack(vjust = 0.5)) +
theme(axis.title.x = element_blank(),
axis.text.x = element_text(colour = "black", size = 10),
plot.title = element_text(hjust = 0.5, size = 12)) +
labs(title = "Historia kredytowa",
y = "%")
# Narysuj dwa wykresy rozrzutu, kategoryzowane przez LoanStatus
ggplot(dane, aes(x = LoanAmount, y = Loan_Amount_Term, color = "blue")) +
geom_point() +
facet_wrap(~LoanStatus, scales = "free") +
labs(title = "Wykresy rozrzutu Loan Amount i Loan Terms według Loan Status", x = "Loan Amount", y = "Loan Terms", color = "Loan Status")
dane <- dane %>% arrange(LoanAmount)
ggplot(dane, aes(x = seq_along(LoanAmount), y = LoanAmount)) +
geom_line(color = "blue") +
labs(title = "Wykres liniowy wartości pożyczki", x = "Numer obserwacji", y = "Warrtość pożyczki")
ggplot(dane, aes(x = LoanAmount, y = Loan_Amount_Term)) +
geom_point(color = "green") +
labs(title = "Wykres rozrzutu Loan Amount i Loan Terms", x = "Loan Amount", y = "Loan Terms")
# Narysuj dwa wykresy rozrzutu, kategoryzowane przez LoanStatus
ggplot(dane, aes(x = LoanAmount, y = Loan_Amount_Term, color = "blue")) +
geom_point() +
facet_wrap(~LoanStatus, scales = "free") +
labs(title = "Wykresy rozrzutu Loan Amount i Loan Terms według Loan Status", x = "Loan Amount", y = "Loan Terms", color = "Loan Status")
# Narysuj dwa wykresy rozrzutu, kategoryzowane przez LoanStatus
ggplot(dane, aes(x = LoanAmount, y = Loan_Amount_Term, color = "blue")) +
geom_point() +
facet_wrap(~LoanStatus, scales = "free") +
labs(title = "Wykresy rozrzutu Loan Amount i Loan Terms według Loan Status", x = "Loan Amount", y = "Loan Terms", color = "green")
# Narysuj dwa wykresy rozrzutu, kategoryzowane przez LoanStatus
ggplot(dane, aes(x = LoanAmount, y = Loan_Amount_Term, color = "blue")) +
geom_point() +
facet_wrap(~Loan_Status, scales = "free") +
labs(title = "Wykresy rozrzutu Loan Amount i Loan Terms według Loan Status", x = "Loan Amount", y = "Loan Terms", color = "green")
# Narysuj dwa wykresy rozrzutu, kategoryzowane przez LoanStatus
ggplot(dane, aes(x = LoanAmount, y = Loan_Amount_Term, color = wartość pożyczki)) +
# Narysuj dwa wykresy rozrzutu, kategoryzowane przez LoanStatus
ggplot(dane, aes(x = LoanAmount, y = Loan_Amount_Term, color = "wartość pożyczki")) +
geom_point() +
facet_wrap(~Loan_Status, scales = "free") +
labs(title = "Wykresy rozrzutu Loan Amount i Loan Terms według Loan Status", x = "Loan Amount", y = "Loan Terms", color = "green")
# Narysuj dwa wykresy rozrzutu, kategoryzowane przez LoanStatus
ggplot(dane, aes(x = LoanAmount, y = Loan_Amount_Term, color = "wartość pożyczki")) +
geom_point() +
facet_wrap(~Loan_Status, scales = "free") +
labs(title = "Wykresy rozrzutu Loan Amount i Loan Terms według Loan Status", x = "Wartość pożyczki", y = "Okres pożyczkowania", color = "green")
# Narysuj dwa wykresy rozrzutu, kategoryzowane przez LoanStatus
ggplot(dane, aes(x = LoanAmount, y = Loan_Amount_Term, )) +
geom_point() +
facet_wrap(~Loan_Status, scales = "free") +
labs(title = "Wykresy rozrzutu Loan Amount i Loan Terms według Loan Status", x = "Wartość pożyczki", y = "Okres pożyczkowania")
# Narysuj dwa wykresy rozrzutu, kategoryzowane przez LoanStatus
ggplot(dane, aes(x = LoanAmount, y = Loan_Amount_Term, )) +
geom_point() +
facet_wrap(~Loan_Status, scales = "free") +
labs(title = "Wykresy rozrzutu wartości i okresu trwania pożyczki z podziałem na deycję pożyczkową", x = "Wartość pożyczki", y = "Okres pożyczkowania")
