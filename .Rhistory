dane <- read.csv("pozyczki.csv")
head(dane)
summary(dane)
names(dane)[names(dane) == "loan_id"] <- "id.pozyczki"
print(colnames(dane))
colnames(dane)[colnames(dane) == "loan_id"] <- "idpozyczki"
print(colnames(dane))
ilosc_brakujacych <- sum(is.na(dane$loan_id))
print(ilosc_brakujacych)
ilosc_brakujacych <- sum(is.na(Gender))
ilosc_brakujacych1 <- sum(is.na(dane$ . ))
print(ilosc_brakujacych1)
colnames(dane)[colnames(dane) == "loan_id"] <- "idpozyczki"
colnames(dane)[colnames(dane) == "Gender"] <- "plec"
colnames(dane)[colnames(dane) == "Loan_id"] <- "nr.pozyczki"
colnames(dane)[colnames(dane) == "Loan_ID"] <- "nr.pozyczki"
colnames(dane)[colnames(dane) == "Married"] <- "malzenstwo"
colnames(dane)[colnames(dane) == "Dependets"] <- "osoby"
colnames(dane)[colnames(dane) == "Education"] <- "wyksztalcenie"
colnames(dane)[colnames(dane) == "Self_Employed"] <- "samozatrudnienie"
colnames(dane)[colnames(dane) == "ApplicantIncome"] <- "posiadany.dochod"
colnames(dane)[colnames(dane) == "Dependets"] <- "osoby"
colnames(dane)[colnames(dane) == "Dependents"] <- "osoby"
colnames(dane)[colnames(dane) == "Gender"] <- "K/M"
colnames(dane)[colnames(dane) == "plec"] <- "K/M"
dane <- read.csv("pozyczki.csv")
head(dane)
summary(dane)
print(colnames(dane))
dane
colnames(dane)[colnames(dane) == "Loan_ID"] <- "id"
colnames(dane)[colnames(dane) == "Gender"] <- "plec"
colnames(dane)[colnames(dane) == "Married"] <- "stan.cywilny"
colnames(dane)[colnames(dane) == "Dependents"] <- "liczba.osob.na.utrzymaniu"
colnames(dane)[colnames(dane) == "Loan_ID"] <- "id"
colnames(dane)[colnames(dane) == "Gender"] <- "plec"
colnames(dane)[colnames(dane) == "Married"] <- "stan.cywilny"
colnames(dane)[colnames(dane) == "Dependents"] <- "liczba.osob.na.utrzymaniu"
colnames(dane)[colnames(dane) == "Education"] <- "wyksztalcenie"
colnames(dane)[colnames(dane) == "Self_Employment"] <- "samozatrudnienie"
colnames(dane)[colnames(dane) == "Self_Employed"] <- "samozatrudnienie"
colnames(dane)[colnames(dane) == "ApplicantIncome"] <- "dochod"
colnames(dane)[colnames(dane) == "Loan_ID"] <- "id"
colnames(dane)[colnames(dane) == "Gender"] <- "plec"
colnames(dane)[colnames(dane) == "Married"] <- "stan.cywilny"
colnames(dane)[colnames(dane) == "Dependents"] <- "liczba.osob.na.utrzymaniu"
colnames(dane)[colnames(dane) == "Education"] <- "wyksztalcenie"
colnames(dane)[colnames(dane) == "Self_Employed"] <- "samozatrudnienie"
colnames(dane)[colnames(dane) == "ApplicantIncome"] <- "dochod"
colnames(dane)[colnames(dane) == "CoapplicantIncome"] <- "dochod2"
colnames(dane)[colnames(dane) == "LoanAmount"] <- "kwota.kredytu"
colnames(dane)[colnames(dane) == "Loan_Amount_Term"] <- "czas.trwania"
colnames(dane)[colnames(dane) == "Credit_History"] <- "historia.kredytowa"
colnames(dane)[colnames(dane) == "Property_Area"] <- "obszar.nieruchomosci"
colnames(dane)[colnames(dane) == "Loan_ID"] <- "id"
colnames(dane)[colnames(dane) == "Gender"] <- "plec"
colnames(dane)[colnames(dane) == "Married"] <- "stan.cywilny"
colnames(dane)[colnames(dane) == "Dependents"] <- "liczba.osob.na.utrzymaniu"
colnames(dane)[colnames(dane) == "Education"] <- "wyksztalcenie"
colnames(dane)[colnames(dane) == "Self_Employed"] <- "samozatrudnienie"
colnames(dane)[colnames(dane) == "ApplicantIncome"] <- "dochod"
colnames(dane)[colnames(dane) == "CoapplicantIncome"] <- "dochod2"
colnames(dane)[colnames(dane) == "LoanAmount"] <- "kwota.kredytu"
colnames(dane)[colnames(dane) == "Loan_Amount_Term"] <- "czas.trwania"
colnames(dane)[colnames(dane) == "Credit_History"] <- "historia.kredytowa"
colnames(dane)[colnames(dane) == "Property_Area"] <- "obszar.nieruchomosci"
colnames(dane)[colnames(dane) == "Loan_Status"] <- "stan.kredytu"
rules <- validator(
dochod >= 0
, dochod2 >= 0
, kwota.kredytu >= 0
, if (dochod > 0) kwota.kredytu > 0
)
library(dplyr)
library(ggplot2)
library(rmdformats)
library(validate)
library(validatetools)
rules <- validator(
dochod >= 0
, dochod2 >= 0
, kwota.kredytu >= 0
, if (dochod > 0) kwota.kredytu > 0
summary(rules)
rules <- validate(
dochod >= 0,
dochod2 >= 0,
kwota.kredytu >= 0,
if (dochod > 0 && kwota.kredytu <= 0)
summary(rules)
summary(rules)
cf <- confront(dochod, stan.cywilny, key="rec_id")
cf <- confront(dochod2, stan.cywilny, key="rec_id")
rules <- validate(
dochod >= 0,
dochod2 >= 0,
kwota.kredytu >= 0,
if (dochod > 0 && kwota.kredytu <= 0)
rules <- validate(
dochod >= 0,
dochod2 >= 0,
kwota.kredytu >= 0,
if (dochod > 0 && kwota.kredytu >= 0)
summary(rules)
install.packages("imputeTS")
install.packages("imputeTS")
library(imputeTS)
dochod<- impute(dane$dochod, method = "median")
df <- data.frame(ID = id, Plec = plec, SC = stan.cywilny,
Utrzymanie = liczba.osob.na.utrzymaniu, Wyksztalcenie = wyksztalcenie,
Samozatrudnienie = samozatrudnienie, Dochod = dochod,
KK = kwota.kredytu, HK = historia = kredytowa)
df <- data.frame(
ID = id,
Plec = plec,
SC = stan.cywilny,
Utrzymanie = liczba.osob.na.utrzymaniu,
Wyksztalcenie = wyksztalcenie,
Samozatrudnienie = samozatrudnienie,
Dochod = dochod,
KK = kwota.kredytu,
HK = historia
)
dane <- read.csv("pozyczki.csv")
head(dane)
summary(dane)
print(colnames(dane))
dane
colnames(dane)[colnames(dane) == "Loan_ID"] <- "id"
colnames(dane)[colnames(dane) == "Gender"] <- "plec"
colnames(dane)[colnames(dane) == "Married"] <- "stan.cywilny"
colnames(dane)[colnames(dane) == "Dependents"] <- "liczba.osob.na.utrzymaniu"
colnames(dane)[colnames(dane) == "Education"] <- "wyksztalcenie"
colnames(dane)[colnames(dane) == "Self_Employed"] <- "samozatrudnienie"
colnames(dane)[colnames(dane) == "ApplicantIncome"] <- "dochod"
colnames(dane)[colnames(dane) == "CoapplicantIncome"] <- "dochod2"
colnames(dane)[colnames(dane) == "LoanAmount"] <- "kwota.kredytu"
colnames(dane)[colnames(dane) == "Loan_Amount_Term"] <- "czas.trwania"
colnames(dane)[colnames(dane) == "Credit_History"] <- "historia.kredytowa"
colnames(dane)[colnames(dane) == "Property_Area"] <- "obszar.nieruchomosci"
colnames(dane)[colnames(dane) == "Loan_Status"] <- "stan.kredytu
df <- data.frame(
ID = id,
Plec = plec,
SC = stan.cywilny,
Utrzymanie = liczba.osob.na.utrzymaniu,
Wyksztalcenie = wyksztalcenie,
Samozatrudnienie = samozatrudnienie,
Dochod = dochod,
KK = kwota.kredytu,
HK = historia
)
.
dane
colnames(dane)[colnames(dane) == "Loan_ID"] <- "id"
colnames(dane)[colnames(dane) == "Loan_ID"] <- "id"
colnames(dane)[colnames(dane) == "Gender"] <- "plec"
colnames(dane)[colnames(dane) == "Married"] <- "stan.cywilny"
colnames(dane)[colnames(dane) == "Dependents"] <- "liczba.osob.na.utrzymaniu"
colnames(dane)[colnames(dane) == "Education"] <- "wyksztalcenie"
colnames(dane)[colnames(dane) == "Self_Employed"] <- "samozatrudnienie"
colnames(dane)[colnames(dane) == "ApplicantIncome"] <- "dochod"
colnames(dane)[colnames(dane) == "CoapplicantIncome"] <- "dochod2"
colnames(dane)[colnames(dane) == "LoanAmount"] <- "kwota.kredytu"
colnames(dane)[colnames(dane) == "Loan_Amount_Term"] <- "czas.trwania"
colnames(dane)[colnames(dane) == "Credit_History"] <- "historia.kredytowa"
colnames(dane)[colnames(dane) == "Property_Area"] <- "obszar.nieruchomosci"
colnames(dane)[colnames(dane) == "Loan_Status"] <- "stan.kredytu
colnames(dane)[colnames(dane) == "Loan_ID"] <- "id"
df <- data.frame(
ID = id,
Plec = plec,
SC = stan.cywilny,
Utrzymanie = liczba.osob.na.utrzymaniu,
Wyksztalcenie = wyksztalcenie,
Samozatrudnienie = samozatrudnienie,
Dochod = dochod,
KK = kwota.kredytu,
HK = historia
)
df <- data.frame(
ID = id,
SC = stan.cywilny,
Utrzymanie = liczba.osob.na.utrzymaniu,
Wyksztalcenie = wyksztalcenie,
Samozatrudnienie = samozatrudnienie,
Dochod = dochod,
KK = kwota.kredytu,
HK = historia
)
df$Dochod <- na.aggregate(df$Dochod, FUN = median)
library(dplyr)
df$Dochod <- na.aggregate(df$Dochod, FUN = median)
?na.aggregate
library(zoo)
df$Dochod <- na.aggregate(df$Dochod, FUN = median)
Dochod<- imputate_na(carseat, dochod, method= median)
?imputate.na
??imputate.na
install.packages("impute")
library(impute)
install.packages("impute")
library(dplyr)
library(ggplot2)
library(rmdformats)
library(validate)
library(validatetools)
install.packages("imputeTS")
library(imputeTS)
library(zoo)
library(impute)
install.packages("imputeTS")
??imputate.na
Dochod<- imputate_na(carseat, dochod, method= median)
# wczytanie danych
dane <- read.csv("pozyczki.csv", na.strings = "")
# wyświetlenie pierwszych wierszy danych
kable(head(dane))
install.packages("knitr")
library(knitr)
install.packages("tidyverse")
# Jakościowe zmienne objaśniające
# instalacja i załadowanie niezbędnych pakietów
install.packages("knitr")
library(knitr)
install.packages("tidyverse")
library(tidyverse)
install.packages("gridExtra")
library(gridExtra)
install.packages("psych")
library(psych)
install.packages("ipred")
library(ipred)
install.packages("rpart")
library(rpart)
install.packages("rpart.plot")
install.packages("rpart")
library(rpart)
install.packages("rpart.plot")
library(rpart.plot)
# Wstęp
## Opis problemu
Celem niniejszego opracowania jest budowa klasyfikatora, który pozwoli możliwie dokładnie przewidzieć decyzję dotyczącą przyznania pożyczki klientom pewnej firmy pożyczkowej.
dane <- read.csv("pozyczki.csv", na.strings = "")
kable(head(dane))
data.frame(zmienna = names(dane)[2:12])
dane <- dane %>%
select(-1)
# wymiary bazy danych
dim(dane)
tab <- as.data.frame(100*prop.table(table(dane$Loan_Status)))
ggplot(tab, aes(x = Var1, y = Freq)) +
geom_col(fill = "#FFFF99", colour = "black") +
geom_text(aes(label = paste0(round(Freq,1),"%")),
stat = "identity", size = 5,
fontface = "bold", position = position_stack(vjust = 0.5)) +
theme(axis.title.x = element_blank(),
axis.text.x = element_text(colour = "black", size = 10),
plot.title = element_text(hjust = 0.5, size = 12)) +
labs(title = "Loan Status",
y = "%")
